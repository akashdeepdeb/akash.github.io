Question 1: Describe the errors that occur when trying to assemble lab12.asm. Identify the cause of each error.

 14: illegal operands for missing opcode. - .ORIG - pseudo op missing.
 16: instruction appears before .ORIG - This error was shown because the .ORIG function was missing.
 17: constant outside of allowed range - x3010 was replaced by xFFFF since xFFFF is -1 in decimal.
 19: illegal operands for ADD - It has 2 commas which is incorrect syntax.
 30: constant outside of allowed range - x300F is not zero. R5 loads ZERO.
 32: label OUTERLOOP has already appeared - BRpz to BRzp
 35: constant outside of allowed range - Constant surpasses number of bits allocated. replaced by label OUTPUT
 43: no .END directive found - .END directive added. 

Question 2: For each label in the code, write down the corresponding memory location. 

OUTERLOOP - x3004
INNERLOOP - x3005
INPUT 	  - x300E
ZERO      - x300F
MINUS1	  - x3010
OUTPUT    - x3011

Question 3: Between using labels and explicit memory locations/offsets, which one makes the most sense, and why?

Labels are better than explicit memory locations since they make the program easier to code. In this way, the programmer need not worry about minor offset errors, locations and simply can use labels to point to a memory location. 
